<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>intern on 个人博客</title><link>https://techzealot.github.io/tags/intern/</link><description>Recent content in intern on 个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 28 Mar 2023 15:14:46 +0800</lastBuildDate><atom:link href="https://techzealot.github.io/tags/intern/index.xml" rel="self" type="application/rss+xml"/><item><title>字符串常量池</title><link>https://techzealot.github.io/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/</link><pubDate>Tue, 28 Mar 2023 15:14:46 +0800</pubDate><guid>https://techzealot.github.io/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F%E6%B1%A0/</guid><description>Java字符串常量池 本文讨论的是JDK8及之后的版本
内存模型的变化 jdk8之后字符串常量池从Perm区转移到堆中
intern机制的变化 如果字符串常量池中存在(StringTable在比较时equals返回true)，则返回该字符串对象地址；
如果字符串常量池中不存在，则返回调用intern的字符串对象在堆中的地址，达到复用该对象
字符串常量池的添加方式 通过双引号字符串声明添加 //创建一个对象 String s = &amp;#34;test&amp;#34;; //创建hello,world两个字符串常量池中对象，两个栈中中间变量，一个堆中最终变量&amp;#34;helloworld&amp;#34;,注意此字符串不在常量池中 String s = new String(&amp;#34;hello&amp;#34;) + new String(&amp;#34;world&amp;#34;); 通过intern方法添加 //常量池不存在时 String s = new String(&amp;#34;hello&amp;#34;) + new String(&amp;#34;world&amp;#34;); s.</description></item></channel></rss>