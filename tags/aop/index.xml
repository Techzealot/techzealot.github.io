<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>aop on 个人博客</title><link>https://techzealot.github.io/tags/aop/</link><description>Recent content in aop on 个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 20 Mar 2023 16:09:36 +0800</lastBuildDate><atom:link href="https://techzealot.github.io/tags/aop/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Aop</title><link>https://techzealot.github.io/posts/spring-aop/</link><pubDate>Mon, 20 Mar 2023 16:09:36 +0800</pubDate><guid>https://techzealot.github.io/posts/spring-aop/</guid><description>Spring AOP AOP实现模式 动态代理
jdk cglib AspectJ静态代理
aspectj compiler AOP失效 动态代理模式下</description></item><item><title>Spring事务</title><link>https://techzealot.github.io/posts/spring%E4%BA%8B%E5%8A%A1/</link><pubDate>Thu, 16 Mar 2023 16:58:08 +0800</pubDate><guid>https://techzealot.github.io/posts/spring%E4%BA%8B%E5%8A%A1/</guid><description>spring事务 声明式事务 声明式事务底层由spring AOP支持
引入依赖spring-boot-starter-jdbc即可使用开箱即用的声明式事务支持
@Service public class OrderService { @Autowired private StoreService storeService; @Transactional(rollbackFor = Exception.</description></item></channel></rss>